#!/bin/bash -e

REPO=/data/scratch/simone/repo
source $REPO/setenv > /dev/null

pkgname=dolfin
pkgver=dev

tmpdir=$REPO/tmp/$pkgname
srcdir=$tmpdir/dolfin
reldir=opt/$pkgname-$pkgver
destdir=$REPO/$reldir

prepare()
{
  mkdir -pv $tmpdir && pushd $tmpdir
  git clone git@bitbucket.org:fenics-project/dolfin.git
  popd
}

configure()
{
  [[ -d $srcdir/build ]] && rm -rf $srcdir/build
  mkdir -pv $srcdir/build && pushd $srcdir/build

  export BOOST_ROOT=$BOOST_DIR
  cmake \
    -D CMAKE_INSTALL_PREFIX:PATH=$destdir \
    -D PYTHON_EXECUTABLE:PATH=$PYTHON_DIR/bin/python2.7 \
    -D PYTHON_LIBRARY:PATH=$PYTHON_DIR/lib/libpython2.7.so \
    -D ARMADILLO_DIR:PATH=$ARMADILLO_DIR \
    -D SCOTCH_DIR:PATH=$SCOTCH_DIR \
    -D AMD_DIR:PATH=$SUITESPARSE_DIR \
    -D UMFPACK_DIR:PATH=$SUITESPARSE_DIR \
    -D CHOLMOD_DIR:PATH=$SUITESPARSE_DIR \
    -D TRILINOS_DIR:PATH=$TRILINOS_DOR \
    -D PARMETIS_DIR:PATH=$PARMETIS_DIR \
    -D HDF5_DIR:PATH=$HDF5_DIR \
    ../
  
  popd
}

build()
{
  pushd $srcdir/build
  make
  popd
}

package()
{
  # remove old installation
  [ -d $destdir ] && rm -rfv $destdir
  # install new one
  pushd $srcdir/build
  _pythonver=`python2 -c 'import sys; print("%d.%d" % sys.version_info[:2])'`
  mkdir -pv $destdir/lib/python$_pythonver/site-packages
  export PYTHONPATH=$destdir/lib/python$_pythonver/site-packages:$PYTHONPATH
  make install
  popd
  pushd $destdir
  cat << EOF > setenv
UFC_DIR=\$REPO/$reldir
PATH=\$UFC_DIR/bin:\$PATH
PYTHONPATH=\$UFC_DIR/lib/python$_pythonver/site-packages:\$PYTHONPATH
PKG_CONFIG_PATH=\$UFC_DIR/lib/pkgconfig:\$PKG_CONFIG_PATH
EOF
  popd
}

clean()
{
  rm -rfv $tmpdir
}

#prepare
configure
#build
#package
#clean
