#!/bin/bash -e

REPO=/data/scratch/simone/repo
source $REPO/setenv > /dev/null

pkgname=petsc
pkgver=3.4.2

tmpdir=$REPO/tmp/$pkgname
srcdir=$tmpdir/$pkgname-$pkgver
reldir=opt/$pkgname-$pkgver
destdir=$REPO/$reldir

prepare()
{
  mkdir -pv $tmpdir && pushd $tmpdir
  wget -N http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-$pkgver.tar.gz
  tar xvfz $pkgname-$pkgver.tar.gz
  popd
}

configure()
{
  pushd $srcdir

  ./configure \
  --prefix=$destdir \
  --with-blas-lapack-dir=$ATLAS_DIR/lib \
  --with-parmetis=1 \
  --with-parmetis-dir=$PARMETIS_DIR \
  --with-metis=1 \
  --with-metis-dir=$METIS_DIR \
  --with-umfpack=1 \
  --with-umfpack-dir=$SUITESPARSE_DIR \
  --with-cholmod=1 \
  --with-cholmod-dir=$SUITESPARSE_DIR \
  --with-hypre=1 \
  --with-hypre-dir=$HYPRE_DIR \
  --with-mumps=1 \
  --with-mumps-dir=$MUMPS_DIR \
  --with-scalapack=1 \
  --with-scalapack-dir=$SCALAPACK_DIR \
  --with-blacs=1 \
  --with-blacs-lib=$SCALAPACK_DIR/lib/libscalapack.so \
  --with-blacs-include=$SCALAPACK_DIR/include \
  --with-superlu=1 \
  --with-superlu-lib=$SUPERLU_DIR/lib/libsuperlu.so \
  --with-superlu-include=$SUPERLU_DIR/include \
  --with-superlu_dist=1 \
  --with-superlu_dist-lib=$SUPERLUDIST_DIR/lib/libsuperlu_dist.so \
  --with-superlu_dist-include=$SUPERLUDIST_DIR/include \
  --with-ml=1 \
  --with-ml-dir=$TRILINOS_DIR \
  --with-scotch=1 \
  --with-scotch-dir=$SCOTCH_DIR \
  --with-ptscotch=1 \
  --with-ptscotch-dir=$SCOTCH_DIR \
  --with-debugging=no \
  --with-shared-libraries=yes
  
  popd
}

build()
{
  pushd $srcdir
  make PETSC_DIR=$srcdir PETSC_ARCH=arch-linux2-c-opt all
  popd
}

package()
{
  # remove old installation
  [ -d $destdir ] && rm -rfv $destdir
  # install new one
  pushd $srcdir
  make PETSC_DIR=$srcdir  PETSC_ARCH=arch-linux2-c-opt install
  make PETSC_DIR=$destdir PETSC_ARCH=arch-linux2-c-opt test
  popd
  pushd $destdir
  cat << EOF > setenv
PETSC_DIR=\$REPO/$reldir
LD_LIBRARY_PATH=\$PETSC_DIR/lib:\$LD_LIBRARY_PATH
PKG_CONFIG_PATH=\$PETSC_DIR/lib/pkgconfig:\$PKG_CONFIG_PATH
EOF
  popd
}

clean()
{
  rm -rfv $tmpdir
}

#prepare
#configure
#build
package
#clean
