#!/bin/bash -e

pkgname=mumps
pkgver=4.10.0

tmpdir=$REPO/tmp/$pkgname
srcdir=$tmpdir/MUMPS_${pkgver}-p3
reldir=opt/$pkgname-$pkgver
destdir=$REPO/$reldir

prepare()
{
  mkdir -pv $tmpdir && pushd $tmpdir
  curl -O http://ftp.mcs.anl.gov/pub/petsc/externalpackages/MUMPS_${pkgver}-p3.tar.gz
  tar xvfz MUMPS_${pkgver}-p3.tar.gz
  popd
}

configure()
{
  pushd $srcdir
  cat <<EOF > Makefile.inc
SCOTCHDIR = $SCOTCH_DIR
ISCOTCH   = -I\$(SCOTCHDIR)/include
LSCOTCH   = -L\$(SCOTCHDIR)/lib -lptesmumps -lesmumps -lptscotch -lscotch -lscotcherr -lz

LPORDDIR  = \$(topdir)/PORD/lib
IPORD     = -I\$(topdir)/PORD/include
LPORD     = -L\$(LPORDDIR) -lpord

IMETIS    = -I/usr/local/include
LMETIS    = -L/usr/local/lib -lparmetis -lmetis

ORDERINGSF = -Dpord -Dparmetis -Dmetis -Dscotch -Dptscotch
ORDERINGSC = \$(ORDERINGSF)

LORDERINGS = \$(LSCOTCH) \$(LPORD) \$(LMETIS)
IORDERINGSF = \$(ISCOTCH)
IORDERINGSC = \$(ISCOTCH) \$(IMETIS) \$(IPORD)

PLAT    =
LIBEXT  = .a
OUTC    = -o
OUTF    = -o
RM = /bin/rm -f
CC = mpicc
FC = mpif90
FL = mpif90
AR = ar vr 
RANLIB = ranlib
SCALAP = -L$SCALAPACK_DIR/lib -lscalapack
INCPAR =
LIBPAR = \$(SCALAP)
# See point 17 in the FAQ to have more details on the compilation of mpich with gfortran
INCSEQ =
LIBSEQ =
LIBBLAS = -framework Accelerate
LIBOTHERS = -lm
#Preprocessor defs for calling Fortran from C (-DAdd_ or -DAdd__ or -DUPPER)
CDEFS   = -DAdd_

#Begin Optimized options
OPTF    = -fPIC -O3 -DALLOW_NON_INIT
OPTL    = -fPIC -O3
OPTC    = -fPIC -O3
#End Optimized options
INCS = \$(INCPAR)
LIBS = \$(LIBPAR)
LIBSEQNEEDED =
EOF
  popd
}

build()
{
  pushd $srcdir
  make all
  popd
}

package()
{
  # remove old installation
  [ -d $destdir ] && rm -rfv $destdir

  for dir in {lib,include}; do
    install -d $destdir/$dir
    install -m 755 $srcdir/$dir/* $destdir/$dir
  done

  rm $destdir/lib/dummy

  pushd $destdir/lib
  mpif90 -dynamiclib -install_name libpord.dylib.4 \
     -compatibility_version 4.10 \
     -current_version $pkgver \
     -Wl,-all_load libpord.a \
     -o libpord.dylib.$pkgver
  ln -svf libpord.dylib.$pkgver libpord.dylib
  ln -svf libpord.dylib.$pkgver libpord.dylib.4
  ln -svf libpord.dylib.$pkgver libpord.dylib.4.10
  rm libpord.a

  mpif90 -dynamiclib -install_name libmumps_common.dylib.4 \
     -compatibility_version 4.10 \
     -current_version $pkgver \
     -Wl,-all_load libmumps_common.a \
     -L. -lpord -L/usr/local/lib -lparmetis -lmetis \
     -L$SCOTCH_DIR/lib -lptscotch -lptesmumps \
     -o libmumps_common.dylib.$pkgver
  ln -svf libmumps_common.dylib.$pkgver libmumps_common.dylib
  ln -svf libmumps_common.dylib.$pkgver libmumps_common.dylib.4
  ln -svf libmumps_common.dylib.$pkgver libmumps_common.dylib.4.10
  rm libmumps_common.a

  for tt in {c,d,z,s}; do
    mpif90 -dynamiclib -install_name lib${tt}mumps.dylib.4 \
       -compatibility_version 4.10 \
       -current_version $pkgver \
       -Wl,-all_load lib${tt}mumps.a \
       -L. -lmumps_common -L$SCALAPACK_DIR/lib -lscalapack \
       -L$SCOTCH_DIR/lib -lptscotch -lptesmumps -lscotch \
       -L/usr/local/lib -lmetis \
       -framework Accelerate \
       -o lib${tt}mumps.dylib.$pkgver
    ln -svf lib${tt}mumps.dylib.$pkgver lib${tt}mumps.dylib
    ln -svf lib${tt}mumps.dylib.$pkgver lib${tt}mumps.dylib.4
    ln -svf lib${tt}mumps.dylib.$pkgver lib${tt}mumps.dylib.4.10
    rm lib${tt}mumps.a
  done

  popd

  pushd $destdir
  cat << EOF > setenv
export MUMPS_DIR=\$REPO/$reldir
DYLD_LIBRARY_PATH=\$MUMPS_DIR/lib:\$DYLD_LIBRARY_PATH
EOF
  popd
}

clean()
{
  rm -rfv $tmpdir
}

prepare
configure
build
package
clean
