#!/bin/bash -e

# require
source $REPO/opt/metis-5.1.0/setenv
source $REPO/opt/openblas-0.2.8/setenv
# for tests
export DYLD_LIBRARY_PATH

pkgname=suitesparse
pkgver=4.2.1

tmpdir=$REPO/tmp/$pkgname
srcdir=$tmpdir/SuiteSparse
reldir=opt/$pkgname-$pkgver
destdir=$REPO/$reldir

prepare()
{
  mkdir -pv $tmpdir && pushd $tmpdir
  curl -O http://www.cise.ufl.edu/research/sparse/SuiteSparse/SuiteSparse-${pkgver}.tar.gz
  tar xvfz SuiteSparse-${pkgver}.tar.gz
  popd

  pushd $srcdir
  patch -Np1 -i $REPO/src/suitesparse/metis_idxtype.diff
  patch -Np1 -i $REPO/src/suitesparse/metis_path.diff
  popd
}

configure()
{
  pushd $srcdir/SuiteSparse_config
  cat <<EOF > SuiteSparse_config.mk
RANLIB = ranlib
ARCHIVE = \$(AR) \$(ARFLAGS)
CP = cp -f
MV = mv -f
INSTALL_LIB = $destdir/lib
INSTALL_INCLUDE = $destdir/include
MAKE = make

BLAS = -L$OPENBLAS_DIR/lib -lopenblas
LAPACK = -L$OPENBLAS_DIR/lib -lopenblas
XERBLA =

GPU_BLAS_PATH =
GPU_CONFIG =

METIS_PATH = $METIS_DIR
METIS = $METIS_DIR/lib/libmetis.dylib

UMFPACK_CONFIG =

CHOLMOD_CONFIG = 

SPQR_CONFIG = -DHAVE_TBB

TBB = -L/usr/local/lib -ltbb

F77 = $LOCALGCC/bin/gfortran
F77FLAGS = -Wa,-q -march=native -O3 -m64 -fPIC
F77LIB =

CC = $LOCALGCC/bin/gcc
CF = \$(CFLAGS) -Wa,-q -march=native -O3 -fexceptions -m64 -fPIC

CXX = $LOCALGCC/bin/g++
CPPCLAGS = \$(CFLAGS) -Wa,-q -march=native -O3 -fexceptions -m64 -fPIC

LIB = -lm

CLEAN = *.o *.obj *.ln *.bb *.bbg *.da *.tcov *.gcov gmon.out *.bak *.d *.gcda *.gcno
EOF
  popd
}

build()
{
  pushd $srcdir
  make default
  popd
}

make_shlib()
{
  local libname=$(basename ${1%.*})
  local soversion=$(ls -1 ${libname}.*.a| sed "s/${libname}.//" | sed "s/.a//")
  local compatversion=$(echo ${soversion} | cut -d"." -f1).$(echo ${soversion} | cut -d"." -f2)
  local soname=${libname}.dylib.${soversion}
  local sonamemajor=${libname}.dylib.$(echo $soversion | cut -d"." -f1)
  
  echo $soversion
  echo $compatversion
  
  echo "Building ${libname} ..."
  shift

  if [[ "${libname}" == "libspqr" ]]; then
    local compiler=$LOCALGCC/bin/g++
  else
    local compiler=$LOCALGCC/bin/gcc
  fi

  $compiler ${LDFLAGS} -dynamiclib -install_name ${sonamemajor} \
    -Wl,-all_load ${libname}.a \
    -L$OPENBLAS_DIR/lib -lopenblas \
    -current_version ${soversion} \
    -compatibility_version ${compatversion} \
    "$@" -o ${soname}
    
  ln -svf ${soname} ${libname}.dylib
  ln -svf ${soname} ${libname}.dylib.${compatversion}
  ln -svf ${soname} ${sonamemajor}
}

package()
{
  # remove old installation
  [ -d $destdir ] && rm -rfv $destdir
  # install new one
  pushd $srcdir
  mkdir -pv $destdir/{include,lib}
  make install
  popd

  pushd $destdir/lib
  # shared libraries
  make_shlib libsuitesparseconfig.a
  make_shlib libamd.a -L. -lsuitesparseconfig
  make_shlib libcolamd.a -L. -lsuitesparseconfig
  make_shlib libccolamd.a -L. -lsuitesparseconfig
  make_shlib libcamd.a -L. -lsuitesparseconfig
  make_shlib libcholmod.a -L. -lsuitesparseconfig \
    -lamd -lcolamd -lccolamd -lcamd \
    -L$METIS_DIR/lib -lmetis
  make_shlib libumfpack.a -lm -L. -lsuitesparseconfig \
    -lcholmod -lamd
  make_shlib libbtf.a -L. -lsuitesparseconfig
  make_shlib libcxsparse.a -L. -lsuitesparseconfig
  make_shlib libklu.a -L. -lsuitesparseconfig \
    -lamd -lbtf -lcolamd
  make_shlib librbio.a -L. -lsuitesparseconfig
  make_shlib libspqr.a -L. -lsuitesparseconfig \
    -lcholmod -L/usr/local/lib -ltbb
  make_shlib libldl.a -L. -lsuitesparseconfig
  popd

  pushd $destdir
  cat << EOF > setenv
export SUITESPARSE_DIR=\$REPO/$reldir
PATH=\$SUITESPARSE_DIR/bin:\$PATH
DYLD_LIBRARY_PATH=\$SUITESPARSE_DIR/lib:\$DYLD_LIBRARY_PATH
EOF
  popd
}

clean()
{
  rm -rfv $tmpdir
}

