#!/bin/bash -e

pkgname=superlu_dist
pkgver=3.3

tmpdir=$REPO/tmp/$pkgname
srcdir=$tmpdir/SuperLU_DIST_${pkgver}
reldir=opt/$pkgname-$pkgver
destdir=$REPO/$reldir

prepare()
{
  mkdir -pv $tmpdir && pushd $tmpdir
  curl -O http://crd-legacy.lbl.gov/~xiaoye/SuperLU/${pkgname}_${pkgver}.tar.gz
  tar xvfz ${pkgname}_${pkgver}.tar.gz
  popd
  pushd $srcdir
  patch -Np0 < $REPO/src/superlu_dist/duplicate_readrhs.patch
  popd
}

configure()
{
  pushd $srcdir
  cat <<EOF > make.inc
DSuperLUroot = $srcdir
DSUPERLULIB  = \$(DSuperLUroot)/lib/libsuperlu_dist.a.${pkgver}

BLASDEF   = -DUSE_VENDOR_BLAS
BLASLIB   = -framework Accelerate

METISLIB      = -L/usr/local/lib -lmetis
PARMETISLIB   = -L/usr/local/lib -lparmetis

FLIBS   =
LIBS    = \$(DSUPERLULIB) \$(BLASLIB) \$(PARMETISLIB) \$(METISLIB)

ARCH         = ar
ARCHFLAGS    = cr
RANLIB       = echo

CC           = mpicc
CFLAGS       = -DDEBUGlevel=0 -DPRNTlevel=1 -DPROFlevel=0 -O3 -fPIC
NOOPTS       = -O0 -fPIC
FORTRAN      = mpif90
FFLAGS       = -O3 -fPIC
LOADER       = \$(CC)
LOADOPTS     =
CDEFS        = -DAdd_
EOF
  popd
}

build()
{
  pushd $srcdir
  make lib

  # shared lib
  mpicc -dynamiclib -install_name lib$pkgname.dylib.3 \
      -Wl,-all_load $srcdir/lib/lib$pkgname.a.$pkgver \
      -compatibility_version 3 \
      -current_version 3.3 \
      -L/usr/local/lib -lparmetis -lmetis \
      -framework Accelerate \
      -o $srcdir/lib/lib$pkgname.dylib.$pkgver

  popd
}

package()
{
  # remove old installation
  [ -d $destdir ] && rm -rfv $destdir

  install -d $destdir/lib
  install -m 755 $srcdir/lib/* $destdir/lib
  ln -svf lib$pkgname.dylib.$pkgver $destdir/lib/lib$pkgname.dylib
  ln -svf lib$pkgname.dylib.$pkgver $destdir/lib/lib$pkgname.dylib.3

  install -d $destdir/include
  install -m 644 $srcdir/SRC/*.h $destdir/include

  rm -v $destdir/include/{html_mainpage,old_colamd}.h

  pushd $destdir
  cat << EOF > setenv
export SUPERLUDIST_DIR=\$REPO/$reldir
DYLD_LIBRARY_PATH=\$SUPERLUDIST_DIR/lib:\$DYLD_LIBRARY_PATH
EOF
  popd
}

clean()
{
  rm -rfv $tmpdir
}

prepare
configure
build
package
clean
