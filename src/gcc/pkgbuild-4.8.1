#!/bin/bash -e

pkgname=gcc
pkgver=4.8.1

tmpdir=$REPO/tmp/$pkgname
srcdir=$tmpdir/$pkgname-$pkgver
reldir=opt/$pkgname-$pkgver
destdir=$REPO/$reldir

prepare()
{
  mkdir -pv $tmpdir && pushd $tmpdir
  curl -O http://ftp.gnu.org/gnu/gcc/gcc-${pkgver}/gcc-${pkgver}.tar.bz2
  tar xvfj $pkgname-$pkgver.tar.bz2

  pushd $srcdir
  # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=57653
  patch -p0 -i $REPO/src/gcc/gcc-4.8-filename-output.patch
  popd

  popd
}

configure()
{
  [[ -d $srcdir/build ]] && rm -rf $srcdir/build
  mkdir -pv $srcdir/build && pushd $srcdir/build

  ../configure \
    --prefix=$destdir \
    --mandir=$destdir/share/man \
    --infodir=$destdir/share/info \
    --libdir=$destdir/lib \
    --libexecdir=$destdir/lib \
    --with-tune=native \
    --with-gmp=$GMP_DIR \
    --with-mpfr=$MPFR_DIR \
    --with-mpc=$LIBMPC_DIR \
    --with-isl=$ISL_DIR \
    --with-cloog=$CLOOG_DIR \
    --enable-cloog-backend=isl \
    --enable-libquadmath \
    --enable-shared \
    --enable-threads=posix \
    --enable-__cxa_atexit \
    --disable-libunwind-exceptions \
    --disable-libstdcxx-pch \
    --enable-libstdcxx-time \
    --enable-linker-build-id \
    --disable-multilib \
    --enable-lto \
    --enable-plugin \
    --enable-gold \
    --enable-ld=default \
    --enable-bootstrap \
    --disable-libssp \
    --enable-checking=release \
    --enable-languages=c,c++,fortran,go,objc,obj-c++,lto

  popd
}

build()
{
  pushd $srcdir/build
  make bootstrap
  
  #make -k check
  ${srcdir}/contrib/test_summary
  popd
}

package()
{
  # remove old installation
  [ -d $destdir ] && rm -rfv $destdir
  
  mkdir -pv $destdir/lib
  pushd $destdir
  ln -svf lib lib64
  popd

  # install new one
  pushd $srcdir/build
  make install
  popd

  # many packages require these symlinks
  pushd $destdir/bin
  ln -sf gcc cc || return 1
  ln -sf g++ c++ || return 1

  # POSIX conformance launcher scripts for c89 and c99
  cat > c89 <<"EOF"
#!/bin/sh
fl="-std=c89"
for opt; do
  case "$opt" in
    -ansi|-std=c89|-std=iso9899:1990) fl="";;
    -std=*) echo "`basename $0` called with non ANSI/ISO C option $opt" >&2
            exit 1;;
  esac
done
exec gcc $fl ${1+"$@"}
EOF

  cat > c99 <<"EOF"
#!/bin/sh
fl="-std=c99"
for opt; do
  case "$opt" in
    -std=c99|-std=iso9899:1999) fl="";;
    -std=*) echo "`basename $0` called with non ISO C99 option $opt" >&2
            exit 1;;
  esac
done
exec gcc $fl ${1+"$@"}
EOF

  chmod 775 c{8,9}9
  popd

  # source script
  pushd $destdir
  cat << EOF > setenv
export GCC_DIR=\$REPO/$reldir
PATH=\$GCC_DIR/bin:\$PATH
DYLD_LIBRARY_PATH=\$GCC_DIR/lib:\$DYLD_LIBRARY_PATH
MANPATH=\$GCC_DIR/share/man:\$MANPATH
INFOPATH=\$GCC_DIR/share/info:\$INFOPATH
EOF
  popd
}

clean()
{
  rm -rfv $tmpdir
}

prepare
configure
build
package
clean
